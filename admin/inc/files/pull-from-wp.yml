name: Pull WordPress Content

on:
  workflow_dispatch:
    inputs:
      file_url:
        description: 'The URL to download the ZIP file from'
        required: true
        default: 'https://example.com/wp-content.zip'
      file_name:
        description: 'The name of the ZIP file'
        required: true
        default: 'wp-content.zip'
      is_basic_auth:
        description: 'Is a basic Auth active?'
        required: true
        default: 'false'
      basic_auth_username:
        description: 'Username of Basic Auth'
        required: false
      basic_auth_password:
        description: 'Password of Basic Auth'
        required: false

jobs:
  sync_wp_to_repo:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Remove existing wp-content directories
        run: |
          rm -rf plugins
          rm -rf themes
          rm -rf mu-plugins

      - name: Download ZIP file
        run: |
          # Prepare Basic Authentication headers if is_basic_auth is true
          if [ "${{ github.event.inputs.is_basic_auth }}" == "true" ]; then
            auth_header="-u ${{ github.event.inputs.basic_auth_username }}:${{ github.event.inputs.basic_auth_password }}"
          else
            auth_header=""
          fi

          curl $auth_header -O ${{ github.event.inputs.file_url }}

      - name: Extract ZIP file
        run: |
          7z x ${{ github.event.inputs.file_name }} -y

      - name: Remove ZIP file
        run: |
          rm -f ${{ github.event.inputs.file_name }}

      - name: Remove mrs-gitdeploy
        run: |
          rm -rf plugins/mrs-gitdeploy

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add .
          # Check if there are any changes to be committed
          if [[ `git status --porcelain` ]]; then
            git commit -m "Update from WordPress ${{ github.event.inputs.file_name }} [skip gitdeploy]"
            git push
          else
            echo "No changes to commit. Everything is up to date."
          fi

      - name: Notify WordPress site via API
        if: always()
        run: |
          # Extract the base domain from the file_url
          site_url=$(echo "${{ github.event.inputs.file_url }}" | sed -E 's|(https?://[^/]+).*|\1|')

          # Prepare Basic Authentication headers if is_basic_auth is true
          if [ "${{ github.event.inputs.is_basic_auth }}" == "true" ]; then
            auth_header="-u ${{ github.event.inputs.basic_auth_username }}:${{ github.event.inputs.basic_auth_password }}"
          else
            auth_header=""
          fi

          response_code=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
            $auth_header \
            -H "Content-Type: application/json" \
            -d '{"file_name": "${{ github.event.inputs.file_name }}", "action_id": "${{ github.run_id }}", "status": "${{ job.status }}"}' \
            ${site_url}/wp-json/mrs_gitdeploy/v1/push-completed)

          if [ "$response_code" -ne 200 ]; then
            echo "Error: API request failed with response code $response_code"
            exit 1
          else
            echo "API request succeeded with response code $response_code"
          fi

      # Cleanup
      - name: Cleanup
        if: always()
        run: |
          # Remove all files and directories in the repository
          rm -rf plugins
          rm -rf themes
          rm -rf mu-plugins
          rm -rf ${{ github.workspace }}/*
